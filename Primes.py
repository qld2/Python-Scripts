#Looks for prime numbers in the digits of an irrational number

import math

irrational = 2.718281828459045235360287471352662497757247093699959574966967627724076630353
547594571382178525166427427466391932003059921817413596629043572900334295260
595630738132328627943490763233829880753195251019011573834187930702154089149
934884167509244761460668082264800168477411853742345442437107539077744992069
551702761838606261331384583000752044933826560297606737113200709328709127443
747047230696977209310141692836819025515108657463772111252389784425056953696
770785449969967946864454905987931636889230098793127736178215424999229576351
482208269895193668033182528869398496465105820939239829488793320362509443117
301238197068416140397019837679320683282376464804295311802328782509819455815
301756717361332069811250996181881593041690351598888519345807273866738589422
879228499892086805825749279610484198444363463244968487560233624827041978623
209002160990235304369941849146314093431738143640546253152096183690888707016

digits = 3;

factor = math.pow(10,digits - 1);

def is_prime(x) :
    for a in range(2, x-1) :
        if x%a == 0 :
            return 0
    return 1

irrational = irrational*factor

for x in range(1, 50) : 
    trun = math.floor(irrational) 
    if is_prime(trun) == 1 :
        print(trun)
    irrational = irrational/factor
    trun2 = math.floor(irrational)
    trun2 = trun2*factor
    irrational = irrational*factor
    irrational = irrational - trun2
    irrational = irrational*10